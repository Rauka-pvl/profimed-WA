<?php

namespace App\Services;

use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class GreenApiService
{
    protected $instanceId = '7105343963';
    protected $apiToken = '07e94e138d7e4c0a99534bf824010a031865571c09ed40de9d';
    protected $baseUrl = "https://7105.api.greenapi.com";

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp
     */
    public function sendMessage(string $phone, string $message): bool
    {
        try {
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è WhatsApp (–±–µ–∑ + –∏ —Å @c.us)
            $chatId = $this->formatPhoneNumber($phone);

            $url = "{$this->baseUrl}/waInstance{$this->instanceId}/sendMessage/{$this->apiToken}";

            $response = Http::post($url, [
                'chatId' => $chatId,
                'message' => $message,
            ]);

            if ($response->successful()) {
                Log::info("WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {$phone}");
                return true;
            }

            Log::error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ WhatsApp: {$response->body()}");
            return false;
        } catch (\Exception $e) {
            Log::error("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ WhatsApp: {$e->getMessage()}");
            return false;
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 24 —á–∞—Å–∞
     */
    public function send24HourReminder(string $phone, string $doctorName, string $date, string $time, string $cabinet = null): bool
    {
        $cabinetText = $cabinet ? " –≤ –∫–∞–±–∏–Ω–µ—Ç–µ {$cabinet}" : "";

        $message = "üè• –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n";
        $message .= "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤–∞—à–µ–º –ø—Ä–∏—ë–º–µ –≤ –∫–ª–∏–Ω–∏–∫–µ PROFIMED:\n";
        $message .= "üë®‚Äç‚öïÔ∏è –í—Ä–∞—á: {$doctorName}\n";
        $message .= "üìÖ –î–∞—Ç–∞: {$date}\n";
        $message .= "üïê –í—Ä–µ–º—è: {$time}{$cabinetText}\n\n";
        $message .= "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏—Ö–æ–¥, –æ—Ç–≤–µ—Ç–∏–≤:\n";
        $message .= "‚úÖ –î–ê - –µ—Å–ª–∏ –ø—Ä–∏–¥—ë—Ç–µ\n";
        $message .= "‚ùå –ù–ï–¢ - –µ—Å–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏";

        return $this->sendMessage($phone, $message);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 3 —á–∞—Å–∞
     */
    public function send3HourReminder(string $phone, string $doctorName, string $time, string $cabinet = null): bool
    {
        $cabinetText = $cabinet ? " –≤ –∫–∞–±–∏–Ω–µ—Ç–µ {$cabinet}" : "";

        $message = "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n\n";
        $message .= "–í–∞—à –ø—Ä–∏—ë–º —Å–µ–≥–æ–¥–Ω—è —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞:\n";
        $message .= "üë®‚Äç‚öïÔ∏è –í—Ä–∞—á: {$doctorName}\n";
        $message .= "üïê –í—Ä–µ–º—è: {$time}{$cabinetText}\n\n";
        $message .= "–ñ–¥—ë–º –≤–∞—Å –≤ –∫–ª–∏–Ω–∏–∫–µ PROFIMED! üè•";

        return $this->sendMessage($phone, $message);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞)
     */
    public function receiveNotifications(): array
    {
        try {
            $url = "{$this->baseUrl}/waInstance{$this->instanceId}/receiveNotification/{$this->apiToken}";

            $response = Http::get($url);

            Log::info('–ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç Green API', ['response' => $response->body()]);

            if ($response->successful()) {
                return $response->json() ?? [];
            }

            return [];
        } catch (\Exception $e) {
            Log::error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {$e->getMessage()}");
            return [];
        }
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
     */
    public function deleteNotification(int $receiptId): bool
    {
        try {
            $url = "{$this->baseUrl}/waInstance{$this->instanceId}/deleteNotification/{$this->apiToken}/{$receiptId}";

            $response = Http::delete($url);

            return $response->successful();
        } catch (\Exception $e) {
            Log::error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {$e->getMessage()}");
            return false;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è WhatsApp
     */
    protected function formatPhoneNumber(string $phone): string
    {
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        $phone = preg_replace('/[^0-9]/', '', $phone);

        // –î–æ–±–∞–≤–ª—è–µ–º @c.us
        return $phone . '@c.us';
    }
}
